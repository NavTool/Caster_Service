# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build on Windows platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        include:
          - version: windows-latest-amd64
            os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.ACTION_TOKEN }}
        fetch-depth: 0
        fetch-tags: true  # 获取所有的 Git 标签
        submodules: true  # 拉取子模块
        
    # - uses: actions/checkout@v4
    #   with:
    #     repository: NavTool/base_third_relys
    #     path: rely
    #     submodules: true  # 拉取子模块
    - name: Fix git safe.directory issue
      run: git config --global --add safe.directory '*'
  

    - name: Run build script
      run: |
        .\ci\build_in_windows.ps1

    - name: Get tag version
      id: tag_version
      run: echo "::set-output name=tag_version::$(git describe --tags --dirty=-dev)"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4.3.3
      with:
        name: Caster_Service-${{ steps.tag_version.outputs.tag_version }}-${{ matrix.version }}
        path: ./bin